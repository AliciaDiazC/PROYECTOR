library(stringr)
strings <- c(" 219 733 8965", "329-293-8753 ", "banana", "595 794 7569",
"387 287 6718", "apple", "233.398.9187 ", "482 952 3315", "239 923 8115",
"842 566 4692", "Work: 579-499-7527", "$1000", "Home: 543.355.3679")
phone <- "([2-9][0-9]{2})[- .]([0-9]{3})[- .]([0-9]{4})"
# ¿qué cadenas contienen números de teléfono?
str_detect(strings, phone)
strings[str_detect(strings, phone)]
install.packages("stringr")
library(stringr)
# Extraer los números de teléfono
str_sub(strings, loc[, "start"], loc[, "end"])
# ¿qué cadenas contienen números de teléfono?
str_detect(strings, phone)
strings[str_detect(strings, phone)]
# ¿en qué parte de la cadena están contenidos?
loc <- str_locate(strings, phone)
loc
# Extraer los números de teléfono
str_sub(strings, loc[, "start"], loc[, "end"])
# O todavía?a mas sencillo
str_extract(strings, phone)
# Extracción de los tres componentes de la regex (entre paréntesis)
str_match(strings, phone)
# Anonimización de los datos
str_replace(strings, phone, "XXX-XXX-XXXX")
knitr::opts_chunk$set(echo = TRUE)
install.packages("knitr")
install.packages("rjson")
install.packages("jsonlite")
install.packages("lubridate")
install.packages("dplyr")
install.packages("ggplot2")
---
title: "Rmarkdown_Proyecto_final"
author: "Alicia Díaz Castillo"
date: "18/11/2019"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## EXPRESIONES REGULARES
En esta sección seleccionaremos dos páginas web explicando expresiones regulares en R.
La primera es <http://rpubs.com/ydmarinb/429756>, esta me gusta mucho, me parece que viene muy bien explicado y estructurado. Al empezar da una breve explicación sobre que son las expresiones regulares. Además, está estructurado de una manera para que el lector lo comprenda al momento, y si quiere algo en especial, solo tiene que pinchar en el índice. En cada parte viene con un ejemplo para enseñar como se usaría cada expresión. Y además está creado con Rmarkdown.
La segunda es <http://www.diegocalvo.es/expresiones-regulares-en-r/>, comparado con la anterior me parece que la estructura no es tan buena. Desde mi punto de vista le falta una pequeña explicacción para los que no saben que son, y se centra menos en la explicación de cada función.
## RMARKDOWN
.
En esta sección vamos a comparar dos páginas web en las que expliquen Rmardown.
Empezaremos con <https://bookdown.org/gboccardo/manual-ED-UCH/introduccion-al-uso-de-rmarkdown-para-la-compilacion-de-resultados-de-rstudio-en-diferentes-formatos.html#tabla-de-estadisticos-univariados>. Lo contenidos estan muy bien explicados, en profundidad. Y te explica como crear todo tipo de elementos como tablas o listas. La estructura de como viene organizado el contenido esta muy bien ya que explica del contenido más siemple al más complicado.
Por último, <https://rpubs.com/JohanMarin/Rmarkdown>. Desde mi punto de vista este es más visual que el anterior. En contenidos explican más o menos lo mismo, sin embargo, este explica como incluir imágenes, código in-line, strings externos. Aunque la estructura no es lo mejor, ya que explica como crear tablas o listas, antes de explicar lo más principal. Y un punto a su favor es que esta hecho en Rmarkdown.
## ESTUDIO DE LOS VOTOS DEL PAÍS VASCO EN EL 2016.
Los datos los he obtenido de la pagina web <http://opendata.esri.es/datasets/pais-vasco-elecciones-auton%C3%B3micas-2016/geoservice>, usando su API, con formato geojson. Primeramente lo transformamos a formato tabla, y la iremos mejorando estéticamente, renombrando las columnas, eliminando columnas que no daban información y transfromando el formato de la fecha en fecha.
```{r json, echo=FALSE, message=FALSE, warning=FALSE}
library(rjson)
library(jsonlite)
votos_json <- readLines("https://opendata.arcgis.com/datasets/828179cabe6f479691b08560f41af197_0.geojson", encoding = "UTF-8")
Votos_list <- fromJSON(votos_json, flatten = TRUE)
```
```{r mej, echo=FALSE, message=FALSE, warning=FALSE}
Votos <- Votos_list$features
colnames(Votos) <-gsub("properties.", "", colnames(Votos))
Votos$type <- NULL
Votos$geometry.type <- NULL
Votos$geometry.coordinates <- NULL
```
```{r fecha, echo=FALSE, message=FALSE, warning=FALSE}
library(lubridate)
Votos$Fecha <- ymd_hms(Votos$Fecha, tz = "Europe/Madrid")
```
(((Escribir la tabla en forma bonita)))
Ya que tenemos la tabla vamos a hacer un pequeño estudio.
```{r censo, echo=FALSE, message=FALSE, warning=FALSE}
head(Votos[order(-Votos$Censo),c("AMBITO","Censo")]) #hacerla mas bonita
```
Se observa que las ciudades más pobladas son las capitales de ....
(((Porcentaje de votación)))
```{r porc, echo=FALSE, message=FALSE, warning=FALSE}
library(dplyr)
Votos$Porcentaje_participacion <- Votos$Votantes*100/Votos$Censo
Votos$Rank_censo <- rank(-Votos$Censo)
Votos2 <- Votos %>%
select(AMBITO, Rank_censo, Porcentaje_participacion) %>%
filter(!is.na(Porcentaje_participacion)) %>%
arrange(Porcentaje_participacion)
rbind(head(Votos2),tail(Votos2))
```
```{r plot, echo=FALSE, message=FALSE, warning=FALSE}
library(ggplot2)
Votos <- Votos %>%
filter(!is.na(Censo))
r <-  ggplot(Votos, aes(x = Rank_censo, y = Porcentaje_participacion)) +geom_point() + geom_smooth(alpha = 0.5)
r
```
setwd("~/Master/R asignatura/material/material/src")
library(dplyr)
# si no lo habias hecho:
bnames <- read.csv("../dat/bnames.csv", stringsAsFactors = FALSE)
View(bnames)
# una función auxiliar que extrae una letra de una palabra
letter <- function(x, n = 1) {
if (n < 0) {
nc <- nchar(x)
n <- nc + n + 1
}
tolower(substr(x, n, n))
}
# número de vocales en una palabra
vowels <- function(x) {
nchar(gsub("[^aeiou]", "", x))
}
bnames <- mutate(bnames,
first = letter(name, 1),
last = letter(name, -1),
length = nchar(name),
vowels = vowels(name)
)
View(bnames)
aaaa <- readLines("https://opendata.arcgis.com/datasets/828179cabe6f479691b08560f41af197_0.geojson", encoding = "UTF-8")
aaaa <- fromJSON(aaaa, flatten = TRUE)
aa <- aaaa$features
#cambiamos nombre de columnas
colnames(aa) <-gsub("properties.", "", colnames(aa))
#eliminamos type y geometry que lo podemos recuperar en otro
aa$type <- NULL
aa$geometry.type <- NULL
aa$geometry.coordinates <- NULL
#El tipo de variables estan bien!! No tengo que modificar nada
library(lubridate)
class(aa$Fecha)#solo esta mal la fecha
aa$Fecha <- ymd_hms(aa$Fecha, tz = "Europe/Madrid")
class(aa$Fecha)
head(aa[order(-aa$Censo),c("AMBITO","Censo")])
#Porcentaje de votación
library(dplyr)
aa$Porcentaje_participación <- aa$Votantes*100/aa$Censo
aa$Rank_censo <- rank(-aa$Censo)
aa2 <- aa %>%
select(AMBITO, Rank_censo, Porcentaje_participación) %>%
filter(!is.na(Porcentaje_participación)) %>%
arrange(Porcentaje_participación)
aa <- aa %>%
filter(!is.na(Censo))
View(aa)
aa <- mutate(aa,
Provincia = codine)
library(stringr)
View(aa)
str_replace(aa$Provincia,"010[0-9][0-9]", "Álava")
str_replace(aa$Provincia,"01[0-9][0-9][0-9]", "Álava")
View(aa)
aa$Provincia <- str_replace(aa$Provincia,"01[0-9][0-9][0-9]", "Álava")
aa$Provincia <- str_replace(aa$Provincia,"20[0-9][0-9][0-9]", "Guipúzcoa")
View(aa)
aa$Provincia <- str_replace(aa$Provincia,"48[0-9][0-9][0-9]", "Vizcaya")
aa$Provincia <- str_replace(aa$Provincia,"01[0-9][0-9][0-9]", "Álava")
aa$Provincia <- str_replace(aa$Provincia,"20[0-9][0-9][0-9]", "Guipúzcoa")
aa$Provincia <- str_replace(aa$Provincia,"48[0-9][0-9][0-9]", "Vizcaya")
View(aa)
aa <- mutate(aa,
Provincia = codine)
library(stringr)
aa$Provincia <- str_replace(aa$Provincia,"01[0-9][0-9][0-9]", "Álava")
aa$Provincia <- str_replace(aa$Provincia,"20[0-9][0-9][0-9]", "Guipúzcoa")
aa$Provincia <- str_replace(aa$Provincia,"48[0-9][0-9][0-9]", "Vizcaya")
Votos <- mutate(Votos,
Provincia = codine)
library(stringr)
Votos$Provincia <- str_replace(Votos$Provincia,"01[0-9][0-9][0-9]", "Álava")
Votos$Provincia <- str_replace(Votos$Provincia,"20[0-9][0-9][0-9]", "Guipúzcoa")
Votos$Provincia <- str_replace(Votos$Provincia,"48[0-9][0-9][0-9]", "Vizcaya")
dcast(aa, Provincia~Porcentaje_participacion)
library(reshape2)
dcast(aa, Provincia~Porcentaje_participacion)
dcast(aa, Provincia~Porcentaje_participación)
a <- dcast(aa, Provincia~Porcentaje_participación)
v  <-  ggplot(aa, aes(x = Provincia, y = Porcentaje_participación)) +geom_violin()
v
b <-  ggplot(aa, aes(x = Provincia, y = Porcentaje_participación)) +geom_boxplot()
b
b <-  ggplot(aa, aes(x = Provincia, y = Porcentaje_participación)) +geom_boxplot()
b
b <-  ggplot(Votos, aes(x = Provincia, y = Porcentaje_participacion)) +geom_boxplot()
b
g <-  ggplot(aa, aes(x = Provincia, y = Censo)) +geom_boxplot()
g
g <-  ggplot(aa, aes(x = Rank_censo, y = Censo)) +geom_boxplot()
g
g
g <-  ggplot(aa, aes(x = Provincia, y = Rank_censo)) +geom_boxplot()
g
b
v  <-  ggplot(aa, aes(x = Provincia, y = Porcentaje_participación)) +geom_violin()
v
v  <-  ggplot(Votos, aes(x = Provincia, y = Porcentaje_participacion)) +geom_violin()
v
g <-  ggplot(Votos, aes(x = Provincia, y = Rank_censo)) +geom_boxplot()
g
c<-  ggplot(Votos, aes(x = Provincia, y = Rank_censo)) +geom_violin()
c
c<-  ggplot(Votos, aes(x = Provincia, y = Rank_censo)) +geom_violin()
c
knitr::opts_chunk$set(echo = TRUE)
v  <-  ggplot(Votos, aes(x = Provincia, y = Porcentaje_participacion)) +geom_violin()
knitr::opts_chunk$set(echo = TRUE)
library(rjson)
library(jsonlite)
votos_json <- readLines("https://opendata.arcgis.com/datasets/828179cabe6f479691b08560f41af197_0.geojson", encoding = "UTF-8")
Votos_list <- fromJSON(votos_json, flatten = TRUE)
Votos <- Votos_list$features
colnames(Votos) <-gsub("properties.", "", colnames(Votos))
Votos$type <- NULL
Votos$geometry.type <- NULL
Votos$geometry.coordinates <- NULL
library(lubridate)
Votos$Fecha <- ymd_hms(Votos$Fecha, tz = "Europe/Madrid")
head(Votos[order(-Votos$Censo),c("AMBITO","Censo")]) #hacerla mas bonita
library(dplyr)
Votos$Porcentaje_participacion <- Votos$Votantes*100/Votos$Censo
Votos$Rank_censo <- rank(-Votos$Censo)
Votos2 <- Votos %>%
select(AMBITO, Rank_censo, Porcentaje_participacion) %>%
filter(!is.na(Porcentaje_participacion)) %>%
arrange(Porcentaje_participacion)
rbind(head(Votos2),tail(Votos2))
library(ggplot2)
Votos <- Votos %>%
filter(!is.na(Censo))
r <-  ggplot(Votos, aes(x = Rank_censo, y = Porcentaje_participacion)) +geom_point() + geom_smooth(alpha = 0.5)
r
Votos <- mutate(Votos,
Provincia = codine)
library(stringr)
Votos$Provincia <- str_replace(Votos$Provincia,"01[0-9][0-9][0-9]", "Álava")
Votos$Provincia <- str_replace(Votos$Provincia,"20[0-9][0-9][0-9]", "Guipúzcoa")
Votos$Provincia <- str_replace(Votos$Provincia,"48[0-9][0-9][0-9]", "Vizcaya")
v  <-  ggplot(Votos, aes(x = Provincia, y = Porcentaje_participacion)) +geom_violin()
v
c<-  ggplot(Votos, aes(x = Provincia, y = Rank_censo)) +geom_violin()
c
library(dplyr)
Votos$Porcentaje_participacion <- Votos$Votantes*100/Votos$Censo
Votos$Rank_censo <- rank(-Votos$Censo)
Votos2 <- Votos %>%
select(AMBITO, Rank_censo, Porcentaje_participacion) %>%
filter(!is.na(Porcentaje_participacion)) %>%
arrange(Porcentaje_participacion)
rbind(head(Votos2),tail(Votos2))
library(dplyr)
Votos$Porcentaje_participación <- Votos$Votantes*100/Votos$Censo
Votos$Rank_censo <- rank(-Votos$Censo)
Votos2 <- Votos %>%
select(AMBITO, Rank_censo, Porcentaje_participacion) %>%
filter(!is.na(Porcentaje_participacion)) %>%
arrange(Porcentaje_participacion)
rbind(head(Votos2),tail(Votos2))
library(dplyr)
Votos$Porcentaje_participación <- Votos$Votantes*100/Votos$Censo
Votos$Rank_censo <- rank(-Votos$Censo)
Votos2 <- Votos %>%
select(AMBITO, Rank_censo, Porcentaje_participacion) %>%
filter(!is.na(Porcentaje_participación)) %>%
arrange(Porcentaje_participacion)
library(dplyr)
Votos$Porcentaje_participación <- Votos$Votantes*100/Votos$Censo
Votos$Rank_censo <- rank(-Votos$Censo)
Votos2 <- Votos %>%
select(AMBITO, Rank_censo, Porcentaje_participación) %>%
filter(!is.na(Porcentaje_participación)) %>%
arrange(Porcentaje_participacion)
library(dplyr)
Votos$Porcentaje_participación <- Votos$Votantes*100/Votos$Censo
Votos$Rank_censo <- rank(-Votos$Censo)
Votos2 <- Votos %>%
select(AMBITO, Rank_censo, Porcentaje_participación) %>%
filter(!is.na(Porcentaje_participación)) %>%
arrange(Porcentaje_participación)
rbind(head(Votos2),tail(Votos2))
library(dplyr)
Votos$Porcentaje_participacion <- Votos$Votantes*100/Votos$Censo
Votos$Rank_censo <- rank(-Votos$Censo)
Votos2 <- Votos %>%
select(AMBITO, Rank_censo, Porcentaje_participacion) %>%
filter(!is.na(Porcentaje_participacion)) %>%
arrange(Porcentaje_participacion)
rbind(head(Votos2),tail(Votos2))
